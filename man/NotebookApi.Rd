% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/notebook_api.R
\docType{class}
\name{NotebookApi}
\alias{NotebookApi}
\title{Notebook operations}
\format{
An \code{R6Class} generator object
}
\description{
tiledbcloud.Notebook
}
\section{Methods}{

\describe{
\strong{ GetNotebookServerStatus } \emph{  }
Get status of the notebook server

\itemize{
\item \emph{ @param } namespace character
\item \emph{ @returnType } \link{NotebookStatus} \cr


\item status code : 200 | status of running notebook

\item return type : NotebookStatus 
\item response headers :

\tabular{ll}{
}
\item status code : 202 | Notebook server is pending


\item response headers :

\tabular{ll}{
}
\item status code : 404 | Notebook is not running


\item response headers :

\tabular{ll}{
}
\item status code : 0 | error response

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ShutdownNotebookServer } \emph{  }
Shutdown a notebook server

\itemize{
\item \emph{ @param } namespace character


\item status code : 204 | Notebook shutdown successfully


\item response headers :

\tabular{ll}{
}
\item status code : 404 | Notebook is not running


\item response headers :

\tabular{ll}{
}
\item status code : 0 | error response

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  GetNotebookServerStatus  ####################

library(tiledbcloud)
var.namespace <- 'namespace_example' # character | namespace notebook is in (an organization name or user's username)

api.instance <- NotebookApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';

#Configure HTTP basic authorization: BasicAuth
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- api.instance$GetNotebookServerStatus(var.namespace)


####################  ShutdownNotebookServer  ####################

library(tiledbcloud)
var.namespace <- 'namespace_example' # character | namespace notebook is in (an organization name or user's username)

api.instance <- NotebookApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';

#Configure HTTP basic authorization: BasicAuth
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- api.instance$ShutdownNotebookServer(var.namespace)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{NotebookApi$new()}}
\item \href{#method-GetNotebookServerStatus}{\code{NotebookApi$GetNotebookServerStatus()}}
\item \href{#method-GetNotebookServerStatusWithHttpInfo}{\code{NotebookApi$GetNotebookServerStatusWithHttpInfo()}}
\item \href{#method-ShutdownNotebookServer}{\code{NotebookApi$ShutdownNotebookServer()}}
\item \href{#method-ShutdownNotebookServerWithHttpInfo}{\code{NotebookApi$ShutdownNotebookServerWithHttpInfo()}}
\item \href{#method-clone}{\code{NotebookApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NotebookApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetNotebookServerStatus"></a>}}
\if{latex}{\out{\hypertarget{method-GetNotebookServerStatus}{}}}
\subsection{Method \code{GetNotebookServerStatus()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NotebookApi$GetNotebookServerStatus(namespace, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetNotebookServerStatusWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetNotebookServerStatusWithHttpInfo}{}}}
\subsection{Method \code{GetNotebookServerStatusWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NotebookApi$GetNotebookServerStatusWithHttpInfo(namespace, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShutdownNotebookServer"></a>}}
\if{latex}{\out{\hypertarget{method-ShutdownNotebookServer}{}}}
\subsection{Method \code{ShutdownNotebookServer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NotebookApi$ShutdownNotebookServer(namespace, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ShutdownNotebookServerWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ShutdownNotebookServerWithHttpInfo}{}}}
\subsection{Method \code{ShutdownNotebookServerWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NotebookApi$ShutdownNotebookServerWithHttpInfo(namespace, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NotebookApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
