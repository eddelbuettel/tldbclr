% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/array_tasks_api.R
\docType{class}
\name{ArrayTasksApi}
\alias{ArrayTasksApi}
\title{ArrayTasks operations}
\format{
An \code{R6Class} generator object
}
\description{
tiledbcloud.ArrayTasks
}
\section{Methods}{

\describe{
\strong{ GetArrayTasksSidebar } \emph{  }


\itemize{
\item \emph{ @param } start integer
\item \emph{ @param } end integer
\item \emph{ @returnType } \link{ArrayTaskBrowserSidebar} \cr


\item status code : 200 | sidebar metadata for task definitions for all arrays user has access to

\item return type : ArrayTaskBrowserSidebar 
\item response headers :

\tabular{ll}{
}
\item status code : 404 | array tasks not found


\item response headers :

\tabular{ll}{
}
\item status code : 0 | error response

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  GetArrayTasksSidebar  ####################

library(tiledbcloud)
var.start <- 56 # integer | Fetch tasks created after this time, unix epoch in seconds, default 7 days ago
var.end <- 56 # integer | Fetch tasks created before this time, unix epoch in seconds, default now

api.instance <- ArrayTasksApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-TILEDB-REST-API-KEY'] <- 'TODO_YOUR_API_KEY';

#Configure HTTP basic authorization: BasicAuth
# provide your username in the user-serial format
api.instance$apiClient$username <- '<user-serial>'; 
# provide your api key generated using the developer portal
api.instance$apiClient$password <- '<api_key>';

result <- api.instance$GetArrayTasksSidebar(start=var.start, end=var.end)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ArrayTasksApi$new()}}
\item \href{#method-GetArrayTasksSidebar}{\code{ArrayTasksApi$GetArrayTasksSidebar()}}
\item \href{#method-GetArrayTasksSidebarWithHttpInfo}{\code{ArrayTasksApi$GetArrayTasksSidebarWithHttpInfo()}}
\item \href{#method-clone}{\code{ArrayTasksApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayTasksApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetArrayTasksSidebar"></a>}}
\if{latex}{\out{\hypertarget{method-GetArrayTasksSidebar}{}}}
\subsection{Method \code{GetArrayTasksSidebar()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayTasksApi$GetArrayTasksSidebar(start = NULL, end = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetArrayTasksSidebarWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetArrayTasksSidebarWithHttpInfo}{}}}
\subsection{Method \code{GetArrayTasksSidebarWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayTasksApi$GetArrayTasksSidebarWithHttpInfo(start = NULL, end = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayTasksApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
